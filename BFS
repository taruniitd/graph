#include <iostream>
#include <bits/stdc++.h>

//O(V+E) time complexity
//O(V) space complexity
void Graph :: BFSInit()
{
    visitedBFS.resize(numVertex,false);
    
}
void Graph :: BFS(int startVertex)
{

    
    list<int> queue;
    visitedBFS[startVertex] = true;
    queue.push_back(startVertex);
    
    while(!queue.empty())
    {
      int cur = queue.front();
      cout << "BFS traversed vertex : " << cur << endl;
      queue.pop_front();
      
      for(auto neighbour : adjList[cur])
      {
          if(!visitedBFS[neighbour])
          {
              visitedBFS[neighbour] = true;
              queue.push_back(neighbour);
          }
      }
      
    }
}   
